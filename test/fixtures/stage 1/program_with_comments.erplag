<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

<<module mod1>>
takes input [index: integer, val_: integer];
    ** this function does not return any value**
    start
        declare i_1: integer;  ** random inline comment**
        i_1:= val_+ index * 4;
        print(i_1);
    end

<<driver Program>>
    **
        random
    multiline
comment
**
    start
        declare a,b, dummy:integer;
        a:=48;
        b:=10;
        dummy:=100 * 2;
        declare flag: boolean;
        flag:=(a>=30)AND(b<30);
        switch(flag)
            start
            case FALSE :print(100);
                       break;
            case TRUE  :use mod1 with parameters a, b;
                       break;
        end
    end

