#ifndef GRAMMAR_H

#define GRAMMAR_H

#define NUM_RULES 104
#define NUM_TERMINALS 58
#define NUM_NON_TERMINALS 56

// #define NUM_RULES 8
// #define NUM_TERMINALS 7
// #define NUM_NON_TERMINALS 5

enum nonTerminal {
    _PROGRAM, _MODULEDECLARATIONS, _MODULEDECLARATION, _OTHERMODULES, // 3
    _DRIVERMODULE, _MODULE, _RET, _INPUT_PLIST, // 7
    _SUB_INPUT_PLIST, _OUTPUT_PLIST, _SUB_OUTPUT_PLIST, _DATATYPE, // 11
    _DYNAMIC_RANGE, _TYPE, _MODULEDEF, _STATEMENTS, // 15
    _STATEMENT, _IOSTMT, _BOOLCONSTT, _EXTENDED_VAR, // 19
    _VAR, _WHICHID, _SIMPLESTMT, _ASSIGNMENTSTMT, // 23
    _WHICHSTMT, _LVALUEIDSTMT, _LVALUEARRSTMT, _INDEX, // 27
    _MODULEREUSESTMT, _OPTIONAL, _IDLIST, _SUB_IDLIST, // 31
    _NEW_EXPRESSION, _U, _SUB_U, _EXPRESSION, // 35
    _N7, _ANYTERM, _N8, _ARITHMETICEXPR, // 39
    _SUB_ARITHMETICEXPR, _TERM, _SUB_TERM, _FACTOR, // 43
    _OP1, _OP2, _LOGICALOP, _RELATIONALOP, // 47
    _DECLARESTMT, _CONDITIONALSTMT, _CASESTMT, _NULLABLECASESTMT, // 51
    _VALUE, _DEFAULT, _ITERATIVESTMT, _RANGE // 55
};

enum terminal {
    IDENTIFIER, NUM, RNUM, PLUS, MINUS, // 4
    MUL, DIV, LT, LE, GE, // 9
    GT, EQ, NE, DEF, DRIVERDEF, // 14
    ENDDEF, DRIVERENDDEF, SQBO, SQBC, BO, // 19
    BC, RANGEOP, COLON, ASSIGNOP, SEMICOL, // 24
    COMMA, INTEGER, REAL, BOOLEAN_, OF, // 29
    ARRAY, START, END, DECLARE, MODULE, // 34
    DRIVER, PROGRAM, GET_VALUE, PRINT, USE, // 39
    WITH, PARAMETERS, TRUE_, FALSE_, TAKES, // 44
    INPUT, RETURNS, AND, OR, FOR, // 49
    IN, SWITCH, CASE, BREAK, DEFAULT, // 54
    WHILE, EPSILON, DOLLAR // 57
 };

enum nonTerminalTest {
	E, E_, T, T_, F_
};

enum terminalTest {
	ID_, PLUS_, MUL_, BO_, BC_, DOLLAR_, EPS_
};

#endif
